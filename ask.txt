Now modify that word from Search to Result page, so that after I input to SearchBar in Search and go to Result, the data in SearchBar will be handled and displayed in Explain

Explain.jsx

```
import React from 'react'

const Explain = ({ searchResults }) => {
  return (
    <div>
        {searchResults.length > 0 ? (
        searchResults.map((item, index) => (
          <div key={index}>
            <p>{item.name1}</p>
            <p>{item.name2}</p>
          </div>
        ))
      ) : (
        <p>No results found.</p>)}
    </div>
  )
}

export default Explain
```

Search.jsx

```
import React, { useState } from "react";
import Navbar from "../components/Navbar";
import SearchIcon from "../assets/image/search.png";
import SearchBar from "../components/SearchBar";

const Search = () => {
  const [searchResults, setSearchResults] = useState([]);

  const handleSearchResults = (result) => {
    setSearchResults(result);
  }

  return (
    <div>
      <Navbar />
      <div className="flex flex-col items-center justify-center h-screen">
        <div className="max-w-[1000px] w-[95%] text-center mb-[30px]">
          <div className="flex justify-center">
            <img src={SearchIcon} className="w-1/5" />
          </div>

          <div className="font-semibold text-[40px] tracking-[0px] text-[#955ed3] text-center">
            Searching Tool
          </div>

          <div className="text-[15px] tracking-[0px] text-[#955ed3] text-center mb-2.5">
            This will also show you how to have that result.
          </div>

          <SearchBar inputWidth={100} onSearchResults={handleSearchResults} />
        </div>
      </div>
    </div>
  );
};

export default Search;
```

Result.jsx

```
import React, { useState, useEffect } from "react";
import Navbar from "../components/Navbar";
import SearchBar from "../components/SearchBar";
import { FaPaw } from "react-icons/fa6";
import Explain from "../components/Explain";
import BinHexDec from "../components/BinHexDec";
import { useLocation } from "react-router-dom";

const Result = () => {
  const [searchResults, setSearchResults] = useState([]);
  const location = useLocation();

  const handleSearchResults = (result) => {
    setSearchResults(result);
  }

  useEffect(() => {
    const params = new URLSearchParams(location.search);
    const word = params.get("word");
    if (word) {
      // handleSearchResults(word);
      // You can initiate a search with the word here if needed
    }
  }, [location.search]);

  return (
    <div>
      <Navbar />
      <div className="flex flex-col items-center justify-center h-screen">
        <div >
          <SearchBar inputWidth={80} onSearchResults={handleSearchResults} />
          <div >
            <div className="panel">
              <h4>Explanation</h4>
              <div className="line"></div>
              <div
                className="result my-[15px]"
              ><Explain searchResults={searchResults} /></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Result;
```

SearchBar

```
import React, { useEffect, useState } from "react";
import { FaPaw } from "react-icons/fa6";
import axiosInstance from "../utils/axiosInstance";
import { useLocation, useNavigate } from "react-router-dom";
import { validateword } from "../utils/helper";

const SearchBar = ({ inputWidth, onSearchResults }) => {
  let [searchTerm, setSearchTerm] = useState("");
  const [error, setError] = useState(null);
  const navigate = useNavigate();
  const location = useLocation();

  useEffect(() => {
    const params = new URLSearchParams(location.search);
    const term = params.get("word");
    if (term) {
      setSearchTerm(term);
    }
  }, [location.search]);

  // Search for word instruction
  const onSearch = async (e) => {
    e.preventDefault();

    // Validate keyword
    if (!validateword(searchTerm)) {
      setError("Wrong Syntax of word Instruction");
      return;
    }

    setError(null); 

    searchTerm = validateword(searchTerm);

    const url = `search-word?word=${searchTerm}`;

    try {
      const res = await axiosInstance.get(url, { cache: false });
      console.log(res.data);
      if (onSearchResults) {
        onSearchResults(res.data); 
      }
      navigate(url);
    } catch (error) {
      console.log("Error fetching data: ", error);
    }
  };

  return (
    <div>
      <div
        className="m-auto bg-[white] h-fit flex items-center border-[#955ed3] justify-between px-2.5 py-[5px] rounded-[40px] border-[2.5px] border-solid"
        style={{ width: `${inputWidth}%` }}
      >
        <input
          type="text"
          placeholder="Searching..."
          id="search-input"
          name="word="
          required
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
        />

        <button type="submit" className="search-btn" onClick={onSearch}>
          <FaPaw />
        </button>
      </div>

      {error && <p className="text-red-500 text-xs pb-1">{error}</p>}
    </div>
  );
};

export default SearchBar;
```